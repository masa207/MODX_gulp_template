/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$sprite-sprite1-name: 'sprite-sprite1';
$sprite-sprite1-x: 0px;
$sprite-sprite1-y: 0px;
$sprite-sprite1-offset-x: 0px;
$sprite-sprite1-offset-y: 0px;
$sprite-sprite1-width: 24px;
$sprite-sprite1-height: 24px;
$sprite-sprite1-total-width: 72px;
$sprite-sprite1-total-height: 48px;
$sprite-sprite1-image: '/assets/templates/v1/sprite.png';
$sprite-sprite1: (0px, 0px, 0px, 0px, 24px, 24px, 72px, 48px, '/assets/templates/v1/sprite.png', 'sprite-sprite1', );
$sprite-sprite2-name: 'sprite-sprite2';
$sprite-sprite2-x: 24px;
$sprite-sprite2-y: 0px;
$sprite-sprite2-offset-x: -24px;
$sprite-sprite2-offset-y: 0px;
$sprite-sprite2-width: 24px;
$sprite-sprite2-height: 24px;
$sprite-sprite2-total-width: 72px;
$sprite-sprite2-total-height: 48px;
$sprite-sprite2-image: '/assets/templates/v1/sprite.png';
$sprite-sprite2: (24px, 0px, -24px, 0px, 24px, 24px, 72px, 48px, '/assets/templates/v1/sprite.png', 'sprite-sprite2', );
$sprite-sprite4-name: 'sprite-sprite4';
$sprite-sprite4-x: 0px;
$sprite-sprite4-y: 24px;
$sprite-sprite4-offset-x: 0px;
$sprite-sprite4-offset-y: -24px;
$sprite-sprite4-width: 24px;
$sprite-sprite4-height: 24px;
$sprite-sprite4-total-width: 72px;
$sprite-sprite4-total-height: 48px;
$sprite-sprite4-image: '/assets/templates/v1/sprite.png';
$sprite-sprite4: (0px, 24px, 0px, -24px, 24px, 24px, 72px, 48px, '/assets/templates/v1/sprite.png', 'sprite-sprite4', );
$sprite-sprite5-name: 'sprite-sprite5';
$sprite-sprite5-x: 24px;
$sprite-sprite5-y: 24px;
$sprite-sprite5-offset-x: -24px;
$sprite-sprite5-offset-y: -24px;
$sprite-sprite5-width: 24px;
$sprite-sprite5-height: 24px;
$sprite-sprite5-total-width: 72px;
$sprite-sprite5-total-height: 48px;
$sprite-sprite5-image: '/assets/templates/v1/sprite.png';
$sprite-sprite5: (24px, 24px, -24px, -24px, 24px, 24px, 72px, 48px, '/assets/templates/v1/sprite.png', 'sprite-sprite5', );
$sprite-sprite6-name: 'sprite-sprite6';
$sprite-sprite6-x: 48px;
$sprite-sprite6-y: 0px;
$sprite-sprite6-offset-x: -48px;
$sprite-sprite6-offset-y: 0px;
$sprite-sprite6-width: 24px;
$sprite-sprite6-height: 24px;
$sprite-sprite6-total-width: 72px;
$sprite-sprite6-total-height: 48px;
$sprite-sprite6-image: '/assets/templates/v1/sprite.png';
$sprite-sprite6: (48px, 0px, -48px, 0px, 24px, 24px, 72px, 48px, '/assets/templates/v1/sprite.png', 'sprite-sprite6', );
$spritesheet-width: 72px;
$spritesheet-height: 48px;
$spritesheet-image: '/assets/templates/v1/sprite.png';
$spritesheet-sprites: ($sprite-sprite1, $sprite-sprite2, $sprite-sprite4, $sprite-sprite5, $sprite-sprite6, );
$spritesheet: (72px, 48px, '/assets/templates/v1/sprite.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
